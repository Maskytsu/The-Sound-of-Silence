//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerKeyboardMap"",
            ""id"": ""f8f7545b-ac2b-4e3d-8bbe-17aa312c7ca4"",
            ""actions"": [
                {
                    ""name"": ""Sneak"",
                    ""type"": ""Value"",
                    ""id"": ""2ae0a9d5-2603-4742-956e-7f5366ba9ded"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""20bf0bb4-4e14-4940-b7f2-3b8a9b8aed5e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GrabItem1"",
                    ""type"": ""Button"",
                    ""id"": ""1ac33bb4-13e9-4b95-a3a4-6a8af51c67c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabItem2"",
                    ""type"": ""Button"",
                    ""id"": ""4532d491-c4b0-4f58-bf21-7cbc1b2f78aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabItem3"",
                    ""type"": ""Button"",
                    ""id"": ""a0870a7b-e09d-450f-a426-aff9e5195603"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabItem4"",
                    ""type"": ""Button"",
                    ""id"": ""f74080cd-2a17-4dfa-b67d-bb75003cef36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrabItem5"",
                    ""type"": ""Button"",
                    ""id"": ""b06564cc-c9b8-44c2-adea-2b6cef0a4651"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3744c6ce-077b-4e0c-a8c5-07496e1f762a"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sneak"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0648d465-fbab-4ec9-8b45-71a58f34a5bd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""04b62cdb-667a-4400-96d9-8c9c0fad89aa"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6fbf0a3d-6b81-46a1-aed2-eb9c87aac0bc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""db36a54b-0acf-435e-86d5-c132d2f394a7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d01781b3-dd8f-49e9-a813-c9e3a8c98500"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""95c94d9b-8218-485d-81e5-32d2b48fdb89"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabItem1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c76c0af-5b36-4687-82a3-6146029b6681"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabItem2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ebf7097-d35d-4a49-a276-6cdc69c56a94"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabItem3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a397ed31-e490-4613-af81-e56dd37ff09e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabItem4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b15fd887-8a7b-48a9-bcc9-dad5df08d5de"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrabItem5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerMouseMap"",
            ""id"": ""296c51fd-e550-40f0-bb4c-f0a6f1f7e38b"",
            ""actions"": [
                {
                    ""name"": ""MouseX"",
                    ""type"": ""Value"",
                    ""id"": ""eaeae0b1-dd10-40c1-9f11-d49e90f77667"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""Value"",
                    ""id"": ""e32591fd-b386-443f-b891-e3a7a5582bed"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""162ae79f-9c00-469d-8b88-00aca0507c43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""51adf2ad-d78d-4e2f-b1fd-f936f4b0d6ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""66c2eb04-f823-4eef-8952-38947de6e01d"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13c5f04a-37ca-4324-9f07-e215969c2965"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9258173-ebd0-46b1-ab8d-d587386974fe"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""213c1a86-f789-4632-b6ad-d7683cb55be3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UICustomMap"",
            ""id"": ""f115de56-b06f-4204-bc60-9988e655f94a"",
            ""actions"": [
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a4f046d7-f6a3-4bb8-a46f-22c24b723c70"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""71268f0b-0c85-4ff7-9003-94e5a0c24935"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""da618c43-6a6a-4ab2-96b7-05a37b71b98c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""129f56ae-951a-4d54-a96d-fb169c3388df"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""Button"",
                    ""id"": ""1182cb1a-98d5-41e0-b425-8f7d3202bc34"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""d2099456-f2ba-42f6-aea3-9f23e22fa399"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""25c3f110-b715-48eb-a977-e14d8247f625"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3953ae23-df25-4f1e-9f4e-2111129b1a4f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc40e0e5-7a84-4d8f-a63e-dceefae9b0e6"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75cb77e6-da9c-40f6-8d85-f40c5c602bbc"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1654b130-bca1-437d-8606-4e2670cd4bf4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bab170c-d419-49fb-86e0-1740805c1e99"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIFullMap"",
            ""id"": ""0c29e9d2-71e4-4421-934f-d3aec52d9ecf"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""442fb66e-8756-4786-9e12-9953ad465e35"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""f1e0fdf0-355f-4d2c-8a2f-bab0eebd338a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""6fb4cce9-2c87-4d25-9c9a-f5c863bd1c99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1a159c1a-a1a2-451d-b9d2-0e9221d530d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e7fa9862-535a-4b6b-b49a-792985c3c651"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3d179e53-429f-453e-a322-0f196e96a150"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c5128288-cf57-4cce-92a8-08f736fce233"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7630d1f4-2fc7-4d9f-9064-f34b70315b69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""9f984a23-51a2-4fb0-9098-bd5b847ee4a5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7866359a-6bf4-4dfd-8da3-4c945fc588e6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""477c49b9-167a-43da-8188-f0c54101f579"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b3c4e2b7-8a81-4336-9cd7-65430d361493"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e83021e6-f7d8-46c1-8fa6-e5e9a380a13d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ac639f38-4d59-4a14-b1eb-009322dc622e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d66ed24d-bff7-458e-abc0-41c4fbfe7f10"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""02c1d0dd-c369-4310-862b-ed0f3c5d517a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b48551ad-8633-4901-8f02-6677ed4e1bd9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""45da64f0-7409-40e9-8c86-57a2b7bdedfa"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25ccdee2-fe75-4499-adb7-9b6968f9304a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""920a33ff-41b8-43ae-8a4c-f922fe60d7e1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2aaa4658-7b10-4003-8aa3-54c83bc463d6"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44dfe144-c672-4ede-bd48-9be546f79d1a"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4160462b-cd2d-461a-94ed-a7d9477a6e2a"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63ca95ae-1f61-44bd-b3e2-bfa12ff685cd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b3f66ac-052f-4080-b910-b67aecadc133"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9be1e2dd-e844-4729-8fb2-d558c576118f"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97088a93-1268-4142-ab90-4244c7bc96b0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        }
    ]
}");
        // PlayerKeyboardMap
        m_PlayerKeyboardMap = asset.FindActionMap("PlayerKeyboardMap", throwIfNotFound: true);
        m_PlayerKeyboardMap_Sneak = m_PlayerKeyboardMap.FindAction("Sneak", throwIfNotFound: true);
        m_PlayerKeyboardMap_Movement = m_PlayerKeyboardMap.FindAction("Movement", throwIfNotFound: true);
        m_PlayerKeyboardMap_GrabItem1 = m_PlayerKeyboardMap.FindAction("GrabItem1", throwIfNotFound: true);
        m_PlayerKeyboardMap_GrabItem2 = m_PlayerKeyboardMap.FindAction("GrabItem2", throwIfNotFound: true);
        m_PlayerKeyboardMap_GrabItem3 = m_PlayerKeyboardMap.FindAction("GrabItem3", throwIfNotFound: true);
        m_PlayerKeyboardMap_GrabItem4 = m_PlayerKeyboardMap.FindAction("GrabItem4", throwIfNotFound: true);
        m_PlayerKeyboardMap_GrabItem5 = m_PlayerKeyboardMap.FindAction("GrabItem5", throwIfNotFound: true);
        // PlayerMouseMap
        m_PlayerMouseMap = asset.FindActionMap("PlayerMouseMap", throwIfNotFound: true);
        m_PlayerMouseMap_MouseX = m_PlayerMouseMap.FindAction("MouseX", throwIfNotFound: true);
        m_PlayerMouseMap_MouseY = m_PlayerMouseMap.FindAction("MouseY", throwIfNotFound: true);
        m_PlayerMouseMap_Interact = m_PlayerMouseMap.FindAction("Interact", throwIfNotFound: true);
        m_PlayerMouseMap_UseItem = m_PlayerMouseMap.FindAction("UseItem", throwIfNotFound: true);
        // UICustomMap
        m_UICustomMap = asset.FindActionMap("UICustomMap", throwIfNotFound: true);
        m_UICustomMap_Point = m_UICustomMap.FindAction("Point", throwIfNotFound: true);
        m_UICustomMap_Cancel = m_UICustomMap.FindAction("Cancel", throwIfNotFound: true);
        m_UICustomMap_LeftClick = m_UICustomMap.FindAction("LeftClick", throwIfNotFound: true);
        m_UICustomMap_ScrollWheel = m_UICustomMap.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UICustomMap_MiddleClick = m_UICustomMap.FindAction("MiddleClick", throwIfNotFound: true);
        m_UICustomMap_RightClick = m_UICustomMap.FindAction("RightClick", throwIfNotFound: true);
        // UIFullMap
        m_UIFullMap = asset.FindActionMap("UIFullMap", throwIfNotFound: true);
        m_UIFullMap_Navigate = m_UIFullMap.FindAction("Navigate", throwIfNotFound: true);
        m_UIFullMap_Submit = m_UIFullMap.FindAction("Submit", throwIfNotFound: true);
        m_UIFullMap_Cancel = m_UIFullMap.FindAction("Cancel", throwIfNotFound: true);
        m_UIFullMap_Point = m_UIFullMap.FindAction("Point", throwIfNotFound: true);
        m_UIFullMap_LeftClick = m_UIFullMap.FindAction("LeftClick", throwIfNotFound: true);
        m_UIFullMap_ScrollWheel = m_UIFullMap.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UIFullMap_MiddleClick = m_UIFullMap.FindAction("MiddleClick", throwIfNotFound: true);
        m_UIFullMap_RightClick = m_UIFullMap.FindAction("RightClick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerKeyboardMap
    private readonly InputActionMap m_PlayerKeyboardMap;
    private List<IPlayerKeyboardMapActions> m_PlayerKeyboardMapActionsCallbackInterfaces = new List<IPlayerKeyboardMapActions>();
    private readonly InputAction m_PlayerKeyboardMap_Sneak;
    private readonly InputAction m_PlayerKeyboardMap_Movement;
    private readonly InputAction m_PlayerKeyboardMap_GrabItem1;
    private readonly InputAction m_PlayerKeyboardMap_GrabItem2;
    private readonly InputAction m_PlayerKeyboardMap_GrabItem3;
    private readonly InputAction m_PlayerKeyboardMap_GrabItem4;
    private readonly InputAction m_PlayerKeyboardMap_GrabItem5;
    public struct PlayerKeyboardMapActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerKeyboardMapActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Sneak => m_Wrapper.m_PlayerKeyboardMap_Sneak;
        public InputAction @Movement => m_Wrapper.m_PlayerKeyboardMap_Movement;
        public InputAction @GrabItem1 => m_Wrapper.m_PlayerKeyboardMap_GrabItem1;
        public InputAction @GrabItem2 => m_Wrapper.m_PlayerKeyboardMap_GrabItem2;
        public InputAction @GrabItem3 => m_Wrapper.m_PlayerKeyboardMap_GrabItem3;
        public InputAction @GrabItem4 => m_Wrapper.m_PlayerKeyboardMap_GrabItem4;
        public InputAction @GrabItem5 => m_Wrapper.m_PlayerKeyboardMap_GrabItem5;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyboardMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyboardMapActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerKeyboardMapActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerKeyboardMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerKeyboardMapActionsCallbackInterfaces.Add(instance);
            @Sneak.started += instance.OnSneak;
            @Sneak.performed += instance.OnSneak;
            @Sneak.canceled += instance.OnSneak;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @GrabItem1.started += instance.OnGrabItem1;
            @GrabItem1.performed += instance.OnGrabItem1;
            @GrabItem1.canceled += instance.OnGrabItem1;
            @GrabItem2.started += instance.OnGrabItem2;
            @GrabItem2.performed += instance.OnGrabItem2;
            @GrabItem2.canceled += instance.OnGrabItem2;
            @GrabItem3.started += instance.OnGrabItem3;
            @GrabItem3.performed += instance.OnGrabItem3;
            @GrabItem3.canceled += instance.OnGrabItem3;
            @GrabItem4.started += instance.OnGrabItem4;
            @GrabItem4.performed += instance.OnGrabItem4;
            @GrabItem4.canceled += instance.OnGrabItem4;
            @GrabItem5.started += instance.OnGrabItem5;
            @GrabItem5.performed += instance.OnGrabItem5;
            @GrabItem5.canceled += instance.OnGrabItem5;
        }

        private void UnregisterCallbacks(IPlayerKeyboardMapActions instance)
        {
            @Sneak.started -= instance.OnSneak;
            @Sneak.performed -= instance.OnSneak;
            @Sneak.canceled -= instance.OnSneak;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @GrabItem1.started -= instance.OnGrabItem1;
            @GrabItem1.performed -= instance.OnGrabItem1;
            @GrabItem1.canceled -= instance.OnGrabItem1;
            @GrabItem2.started -= instance.OnGrabItem2;
            @GrabItem2.performed -= instance.OnGrabItem2;
            @GrabItem2.canceled -= instance.OnGrabItem2;
            @GrabItem3.started -= instance.OnGrabItem3;
            @GrabItem3.performed -= instance.OnGrabItem3;
            @GrabItem3.canceled -= instance.OnGrabItem3;
            @GrabItem4.started -= instance.OnGrabItem4;
            @GrabItem4.performed -= instance.OnGrabItem4;
            @GrabItem4.canceled -= instance.OnGrabItem4;
            @GrabItem5.started -= instance.OnGrabItem5;
            @GrabItem5.performed -= instance.OnGrabItem5;
            @GrabItem5.canceled -= instance.OnGrabItem5;
        }

        public void RemoveCallbacks(IPlayerKeyboardMapActions instance)
        {
            if (m_Wrapper.m_PlayerKeyboardMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerKeyboardMapActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerKeyboardMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerKeyboardMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerKeyboardMapActions @PlayerKeyboardMap => new PlayerKeyboardMapActions(this);

    // PlayerMouseMap
    private readonly InputActionMap m_PlayerMouseMap;
    private List<IPlayerMouseMapActions> m_PlayerMouseMapActionsCallbackInterfaces = new List<IPlayerMouseMapActions>();
    private readonly InputAction m_PlayerMouseMap_MouseX;
    private readonly InputAction m_PlayerMouseMap_MouseY;
    private readonly InputAction m_PlayerMouseMap_Interact;
    private readonly InputAction m_PlayerMouseMap_UseItem;
    public struct PlayerMouseMapActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerMouseMapActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseX => m_Wrapper.m_PlayerMouseMap_MouseX;
        public InputAction @MouseY => m_Wrapper.m_PlayerMouseMap_MouseY;
        public InputAction @Interact => m_Wrapper.m_PlayerMouseMap_Interact;
        public InputAction @UseItem => m_Wrapper.m_PlayerMouseMap_UseItem;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMouseMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMouseMapActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMouseMapActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMouseMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMouseMapActionsCallbackInterfaces.Add(instance);
            @MouseX.started += instance.OnMouseX;
            @MouseX.performed += instance.OnMouseX;
            @MouseX.canceled += instance.OnMouseX;
            @MouseY.started += instance.OnMouseY;
            @MouseY.performed += instance.OnMouseY;
            @MouseY.canceled += instance.OnMouseY;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @UseItem.started += instance.OnUseItem;
            @UseItem.performed += instance.OnUseItem;
            @UseItem.canceled += instance.OnUseItem;
        }

        private void UnregisterCallbacks(IPlayerMouseMapActions instance)
        {
            @MouseX.started -= instance.OnMouseX;
            @MouseX.performed -= instance.OnMouseX;
            @MouseX.canceled -= instance.OnMouseX;
            @MouseY.started -= instance.OnMouseY;
            @MouseY.performed -= instance.OnMouseY;
            @MouseY.canceled -= instance.OnMouseY;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @UseItem.started -= instance.OnUseItem;
            @UseItem.performed -= instance.OnUseItem;
            @UseItem.canceled -= instance.OnUseItem;
        }

        public void RemoveCallbacks(IPlayerMouseMapActions instance)
        {
            if (m_Wrapper.m_PlayerMouseMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMouseMapActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMouseMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMouseMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMouseMapActions @PlayerMouseMap => new PlayerMouseMapActions(this);

    // UICustomMap
    private readonly InputActionMap m_UICustomMap;
    private List<IUICustomMapActions> m_UICustomMapActionsCallbackInterfaces = new List<IUICustomMapActions>();
    private readonly InputAction m_UICustomMap_Point;
    private readonly InputAction m_UICustomMap_Cancel;
    private readonly InputAction m_UICustomMap_LeftClick;
    private readonly InputAction m_UICustomMap_ScrollWheel;
    private readonly InputAction m_UICustomMap_MiddleClick;
    private readonly InputAction m_UICustomMap_RightClick;
    public struct UICustomMapActions
    {
        private @PlayerInputActions m_Wrapper;
        public UICustomMapActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Point => m_Wrapper.m_UICustomMap_Point;
        public InputAction @Cancel => m_Wrapper.m_UICustomMap_Cancel;
        public InputAction @LeftClick => m_Wrapper.m_UICustomMap_LeftClick;
        public InputAction @ScrollWheel => m_Wrapper.m_UICustomMap_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UICustomMap_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UICustomMap_RightClick;
        public InputActionMap Get() { return m_Wrapper.m_UICustomMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UICustomMapActions set) { return set.Get(); }
        public void AddCallbacks(IUICustomMapActions instance)
        {
            if (instance == null || m_Wrapper.m_UICustomMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UICustomMapActionsCallbackInterfaces.Add(instance);
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
        }

        private void UnregisterCallbacks(IUICustomMapActions instance)
        {
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
        }

        public void RemoveCallbacks(IUICustomMapActions instance)
        {
            if (m_Wrapper.m_UICustomMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUICustomMapActions instance)
        {
            foreach (var item in m_Wrapper.m_UICustomMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UICustomMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UICustomMapActions @UICustomMap => new UICustomMapActions(this);

    // UIFullMap
    private readonly InputActionMap m_UIFullMap;
    private List<IUIFullMapActions> m_UIFullMapActionsCallbackInterfaces = new List<IUIFullMapActions>();
    private readonly InputAction m_UIFullMap_Navigate;
    private readonly InputAction m_UIFullMap_Submit;
    private readonly InputAction m_UIFullMap_Cancel;
    private readonly InputAction m_UIFullMap_Point;
    private readonly InputAction m_UIFullMap_LeftClick;
    private readonly InputAction m_UIFullMap_ScrollWheel;
    private readonly InputAction m_UIFullMap_MiddleClick;
    private readonly InputAction m_UIFullMap_RightClick;
    public struct UIFullMapActions
    {
        private @PlayerInputActions m_Wrapper;
        public UIFullMapActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UIFullMap_Navigate;
        public InputAction @Submit => m_Wrapper.m_UIFullMap_Submit;
        public InputAction @Cancel => m_Wrapper.m_UIFullMap_Cancel;
        public InputAction @Point => m_Wrapper.m_UIFullMap_Point;
        public InputAction @LeftClick => m_Wrapper.m_UIFullMap_LeftClick;
        public InputAction @ScrollWheel => m_Wrapper.m_UIFullMap_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UIFullMap_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UIFullMap_RightClick;
        public InputActionMap Get() { return m_Wrapper.m_UIFullMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIFullMapActions set) { return set.Get(); }
        public void AddCallbacks(IUIFullMapActions instance)
        {
            if (instance == null || m_Wrapper.m_UIFullMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIFullMapActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
        }

        private void UnregisterCallbacks(IUIFullMapActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
        }

        public void RemoveCallbacks(IUIFullMapActions instance)
        {
            if (m_Wrapper.m_UIFullMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIFullMapActions instance)
        {
            foreach (var item in m_Wrapper.m_UIFullMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIFullMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIFullMapActions @UIFullMap => new UIFullMapActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IPlayerKeyboardMapActions
    {
        void OnSneak(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnGrabItem1(InputAction.CallbackContext context);
        void OnGrabItem2(InputAction.CallbackContext context);
        void OnGrabItem3(InputAction.CallbackContext context);
        void OnGrabItem4(InputAction.CallbackContext context);
        void OnGrabItem5(InputAction.CallbackContext context);
    }
    public interface IPlayerMouseMapActions
    {
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
    }
    public interface IUICustomMapActions
    {
        void OnPoint(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
    }
    public interface IUIFullMapActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
    }
}
